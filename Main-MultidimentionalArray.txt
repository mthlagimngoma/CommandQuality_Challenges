public class MultiDimension {
    public static void main(String[] args) {
        String line = "1,4,3,2,3,7,5,6,9\n" + "8,6,3,7,3,7,5,6,9\n";
        String[] rows = line.split("\n");
        String[][] strArray = new String[rows.length][];
        int x  = 0;

        for (String row : rows){
            strArray[x++] = row.split(",");
        }

        int[][] string_numbers = new int[strArray.length][strArray[0].length];

        System.out.println("Original Array Values:");
        for (int i = 0; i < string_numbers .length; i++) {
            for (int j = 0; j < string_numbers[i].length; j++) {
                string_numbers[i][j] = Integer.parseInt(strArray[i][j]);
                System.out.print(string_numbers[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println("Sorted Array in Ascending Order:");
        for (int i = 0; i < string_numbers.length; i++) {
            for (int j = 0; j < string_numbers[i].length; j++) {
                for (int k = 0; k < string_numbers[i].length - j - 1; k++) {
                    if (string_numbers[i][k] > string_numbers[i][k + 1]){
                        int temp = 0;
                        temp = string_numbers[i][k];
                        string_numbers[i][k] = string_numbers[i][k + 1];
                        string_numbers[i][k + 1] = temp;
                    }
                }
            }
        }

        for (int i = 0; i < string_numbers.length; i++) {
            for (int j = 0; j < string_numbers[i].length; j++) {
                System.out.print(string_numbers[i][j] + " ");
            }
            System.out.println();
        }

	 for (int i = 0; i < string_numbers.length; i++) {
            for (int j = 0; j < string_numbers[i].length; j++) {
                System.out.print(string_numbers[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println("Sorted Array in Descending Order:");
        for (int i = 0; i < string_numbers.length; i++) {
            for (int j = 0; j < string_numbers[i].length; j++) {
                for (int k = 0; k < string_numbers[i].length - j - 1; k++) {
                    if (string_numbers[i][k] < string_numbers[i][k + 1]){
                        int temp = 0;
                        temp = string_numbers[i][k];
                        string_numbers[i][k] = string_numbers[i][k + 1];
                        string_numbers[i][k + 1] = temp;
                    }
                }
            }
        }
       
    }
}